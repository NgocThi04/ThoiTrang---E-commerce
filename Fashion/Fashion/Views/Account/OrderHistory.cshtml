@model IEnumerable<Fashion.ViewModels.OrderHistoryViewModel>
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Lịch sử đơn hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/OrderHistory.css" />

<div class="order-history-container">
    <h1>Đơn Hàng Của Tôi</h1>

    <div class="order-table">
        <div class="order-table-header">
            <div class="header-item product-col">Mã Đơn Hàng & Sản Phẩm</div>
            <div class="header-item status-col">Trạng Thái</div>
            <div class="header-item address-col">Địa chỉ giao hàng</div>
            <div class="header-item date-col">Ngày Giao Hàng</div>
            <div class="header-item price-col">Giá</div>
            <div class="header-item action-col"></div>
        </div>

        @if (Model != null && Model.Any())
        {
            foreach (var order in Model)
            {
                var unreviewedItems = order.Items.Where(i => !i.IsReviewed).ToList();
                var firstItem = order.Items.FirstOrDefault();
                <div class="order-row">
                    <div class="order-cell product-col">
                        <div class="product-info">
                            @if (firstItem != null)
                            {
                                <img src="@firstItem.ProductImageUrl" alt="@firstItem.ProductName" class="product-image"/>
                                <div>
                                    <span class="order-code">@order.OrderCode</span>
                                    <span class="product-name">@firstItem.ProductName</span>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="order-cell status-col">
                        <span class="status status-@order.Status.ToLower().Replace(" ", "-")">@order.Status</span>
                    </div>
                    <div class="order-cell address-col">@order.ShippingAddress</div>
                    <div class="order-cell date-col">@order.OrderDate.ToString("dd-MM-yyyy")</div>
                    <div class="order-cell price-col">@order.TotalAmount.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</div>
                    <div class="order-cell action-col">
                        @if (order.Status == "Đã giao" && unreviewedItems.Any())
                        {
                            <button class="btn btn-outline-success btn-sm fw-semibold px-3" style="border-radius: 1em; min-width: 100px; white-space: nowrap;" 
                                    data-orderid="@order.OrderId"
                                    data-products='@Html.Raw(JsonConvert.SerializeObject(unreviewedItems))'
                                    onclick="openReviewModal(this)">
                                Đánh giá
                            </button>
                        }
                        else if (order.Status == "Đã giao" && order.Items.All(i => i.IsReviewed))
                        {
                            <span class="badge bg-success ms-2" style="border-radius: 1em; font-weight:600; font-size:1em; padding:0.5em 1.2em;">Đã đánh giá</span>
                        }
                    </div>
                </div>
            }
        }
        else
        {
            <div class="no-orders">
                <p>Bạn chưa có đơn hàng nào.</p>
            </div>
        }
    </div>
</div>

<!-- Modal đánh giá -->
<div class="modal fade" id="reviewModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <form id="reviewForm" class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Đánh giá sản phẩm: <span id="reviewProductName"></span></h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <input type="hidden" name="OrderId" id="reviewOrderId" />
        <input type="hidden" name="ProductId" id="reviewProductId" />
        <div class="mb-3" id="productSelectGroup" style="display:none;">
          <label class="form-label">Chọn sản phẩm</label>
          <select class="form-select" id="reviewProductSelect"></select>
        </div>
        <div class="mb-3">
          <label class="form-label">Số sao</label>
          <select class="form-select" name="SoSao" required>
            <option value="">Chọn số sao</option>
            <option value="5">5 - Tuyệt vời</option>
            <option value="4">4 - Tốt</option>
            <option value="3">3 - Bình thường</option>
            <option value="2">2 - Kém</option>
            <option value="1">1 - Rất tệ</option>
          </select>
        </div>
        <div class="mb-3">
          <label class="form-label">Nội dung đánh giá</label>
          <textarea class="form-control" name="NoiDung" rows="3" required></textarea>
        </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Gửi đánh giá</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
      </div>
    </form>
  </div>
</div>

@section Scripts {
<script>
function openReviewModal(btn) {
    var orderId = btn.getAttribute('data-orderid');
    var products = JSON.parse(btn.getAttribute('data-products'));
    document.getElementById('reviewOrderId').value = orderId;

    var selectGroup = document.getElementById('productSelectGroup');
    var select = document.getElementById('reviewProductSelect');
    select.innerHTML = '';
    if (products.length > 1) {
        selectGroup.style.display = '';
        products.forEach(function(p, idx) {
            var opt = document.createElement('option');
            opt.value = p.ProductId;
            opt.text = p.ProductName;
            select.appendChild(opt);
        });
        select.onchange = function() {
            var idx = select.selectedIndex;
            document.getElementById('reviewProductId').value = select.value;
            document.getElementById('reviewProductName').innerText = select.options[idx].text;
        };
        select.selectedIndex = 0;
        select.onchange();
    } else {
        selectGroup.style.display = 'none';
        document.getElementById('reviewProductId').value = products[0].ProductId;
        document.getElementById('reviewProductName').innerText = products[0].ProductName;
    }
    var modal = new bootstrap.Modal(document.getElementById('reviewModal'));
    modal.show();
}

document.getElementById('reviewForm').onsubmit = function(e) {
    e.preventDefault();
    var form = e.target;
    var data = new FormData(form);
    fetch('/DanhGia/AddReview', {
        method: 'POST',
        body: data
    })
    .then(res => res.json())
    .then(res => {
        if(res.success) {
            alert('Đánh giá thành công!');
            location.reload();
        } else {
            alert(res.message || 'Có lỗi xảy ra!');
        }
    });
};
</script>
} 