@model Fashion.ViewModels.GioHangViewModel
@using System.Globalization

@{
    ViewData["Title"] = "Giỏ Hàng Của Bạn";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Giohang.css" />
    <style>
        .original-price {
            text-decoration: line-through;
            color: #888;
        }
    </style>
}

@Html.AntiForgeryToken()


<h1 class="page-title">Giỏ Hàng Của Bạn</h1>

<div class="cart-layout">
    <!-- Cart Items -->
    <div class="cart-items">
        @if (Model.CartItems.Any())
        {
            foreach (var item in Model.CartItems)
            {
                <div class="cart-item" data-item-id="@item.Id">
                    <div class="item-image">
                        <img src="/@item.KichThuocSanPham.SanPham.DuongDanAnh" alt="@item.KichThuocSanPham.SanPham.Ten">
                    </div>
                    <div class="item-details">
                        <div class="item-name">@item.KichThuocSanPham.SanPham.Ten</div>
                        <div class="item-attributes">
                            <div class="item-attribute">Size: @item.KichThuocSanPham.KichThuoc</div>
                            <div class="item-attribute">Color: @item.KichThuocSanPham.MauSac</div>
                        </div>
                        @if (item.KichThuocSanPham.SanPham.GiaGiam.HasValue && item.KichThuocSanPham.SanPham.GiaGiam < item.KichThuocSanPham.SanPham.Gia)
                        {
                            <div class="item-price">
                                <span class="current-price">@item.KichThuocSanPham.SanPham.GiaGiam.Value.ToString("N0", new CultureInfo("vi-VN")) VNĐ</span>
                                <span class="original-price">@item.KichThuocSanPham.SanPham.Gia.ToString("N0", new CultureInfo("vi-VN")) VNĐ</span>
                            </div>
                        }
                        else
                        {
                            <div class="item-price">@item.KichThuocSanPham.SanPham.Gia.ToString("N0", new CultureInfo("vi-VN")) VNĐ</div>
                        }
                    </div>
                    <div class="item-actions">
                        <div class="quantity-controls">
                            <button class="quantity-btn" onclick="updateQuantity(this, -1)">−</button>
                            <input type="number" class="quantity-input" value="@item.SoLuong" min="1" readonly>
                            <button class="quantity-btn" onclick="updateQuantity(this, 1)">+</button>
                        </div>
                        <button class="delete-btn" onclick="removeItem(this)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M4.5 0a.5.5 0 0 1 .5.5v1h6V.5a.5.5 0 0 1 .5-.5h-7a.5.5 0 0 1-.5.5v1H2.5V.5A.5.5 0 0 1 3 0h1.5z"/>
                                <path d="M14.5 3a1 1 0 0 1-1 1H2.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3V2h11v1z"/>
                            </svg>
                        </button>
                    </div>
                </div>
            }
        }
        else
        {
            <div style="text-align: center; padding: 50px; color: #666;">Giỏ hàng của bạn đang trống</div>
        }
    </div>

    <!-- Order Summary -->
    <div class="order-summary">
        <h2 class="summary-title">Thông tin đơn hàng</h2>

        <div class="summary-row summary-total">
            <span class="summary-label">Tổng cộng</span>
            <span class="summary-value" id="total">@Model.Total.ToString("N0", new CultureInfo("vi-VN")) VNĐ</span>
        </div>

        <button class="checkout-btn" onclick="checkout()">Thanh toán ngay</button>
    </div>
</div>

@section Scripts {
<script>
    const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;

    function updateTotals(data) {
        if (data.success) {
            document.getElementById('total').textContent = data.total + ' VNĐ';
        }
    }

    function updateQuantity(btn, change) {
        const cartItem = btn.closest('.cart-item');
        const cartItemId = cartItem.dataset.itemId;
        const input = cartItem.querySelector('.quantity-input');
        const currentQuantity = parseInt(input.value);
        const newQuantity = currentQuantity + change;

        if (newQuantity < 1) {
            removeItem(btn);
            return;
        }

        const formData = new FormData();
        formData.append('__RequestVerificationToken', token);
        formData.append('cartItemId', cartItemId);
        formData.append('quantity', newQuantity);

        fetch('/GioHang/UpdateQuantity', { 
            method: 'POST', 
            body: formData,
            credentials: 'same-origin'
        })
            .then(response => response.json())
            .then(data => {
                if(data.success) {
                    input.value = newQuantity;
                    updateTotals(data);
                } else {
                    alert(data.message || "Có lỗi xảy ra khi cập nhật giỏ hàng.");
                }
            });
    }

    function removeItem(btn) {
        const cartItem = btn.closest('.cart-item');
        const cartItemId = cartItem.dataset.itemId;

        if (!confirm("Bạn có chắc muốn xóa sản phẩm này khỏi giỏ hàng?")) {
            return;
        }

        const formData = new FormData();
        formData.append('__RequestVerificationToken', token);
        formData.append('cartItemId', cartItemId);

        fetch('/GioHang/RemoveFromCart', { 
            method: 'POST', 
            body: formData,
            credentials: 'same-origin'
        })
            .then(response => response.json())
            .then(data => {
                 if(data.success) {
                    cartItem.style.opacity = '0';
                    cartItem.style.transform = 'translateX(-100%)';
                    cartItem.style.transition = 'all 0.3s ease';
                    
                    setTimeout(() => {
                        cartItem.remove();
                        updateTotals(data);
                        
                        const remainingItems = document.querySelectorAll('.cart-item');
                        if (remainingItems.length === 0) {
                            document.querySelector('.cart-items').innerHTML = 
                                '<div style="text-align: center; padding: 50px; color: #666;">Giỏ hàng của bạn đang trống</div>';
                        }
                    }, 300);
                 } else {
                    alert(data.message || "Có lỗi xảy ra khi xóa sản phẩm.");
                 }
            });
    }

    function checkout() {
        window.location.href = '/ThanhToan';
    }
</script>
} 